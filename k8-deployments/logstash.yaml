# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: logstash-configmap
#   namespace: dv-sys
# data:
#   logstash.yml: |
#     config.reload.automatic: true
  # logstash.conf: |
  #   filter {
  #   aggregate {
  #       task_id => "%{dv_id}"
  #       code => "
  #           map['dv_id'] = event.get('dv_id')
  #           map['doctype'] = event.get('doctype')
  #           map['dv_filename'] = event.get('dv_filename')
  #           map['dv_exportname'] = event.get('dv_exportname')
  #           map['dv_comment'] = event.get('dv_comment')
  #           map['dv_metadata'] = event.get('dv_metadata')
  #           map['tags'] ||= []
  #           if (event.get('dv_tag') != nil)
  #               map['tags'] << {'dv_tag' => event.get('dv_tag')}
  #           end
  #       event.cancel()"
  #       push_previous_map_as_event => true
  #       timeout => 30
  #   }
  #   }
  #   output {
  #       elasticsearch {
  #           hosts => ["http://elasticsearch:9200/"]
  #           index => "%{doctype}"
  #           document_id => "%{dv_id}"
  #       }
  #   }
  # inputTemplate.conf: |
  #   input {
  #     jdbc {
  #       # jdbc_driver_library => "$JDBC_DRIVER_PATH"
  #       jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
  #       jdbc_connection_string => "$JDBC_CONNECTION_STRING"
  #       jdbc_user => $JDBC_USER
  #       jdbc_password => $JDBC_PASSWORD
  #       jdbc_paging_enabled => true
  #       jdbc_page_size => "50000"
  #       tracking_column => "unix_timestamp"
  #       tracking_column_type => "numeric"
  #       use_column_value => true
  #       schedule => "* * * * *"
  #       statement => "SELECT UNIX_TIMESTAMP(dc.dv_lastmodified) as unix_timestamp,dc.dv_id,dc.dv_filename,dc.dv_exportname,dc.dv_comment,dc.dv_metadata,dc.dv_lastmodified,dt.dv_tag FROM dv_document dc LEFT OUTER JOIN dv_document_tag dt on dc.dv_id = dt.dv_docid where (dc.dv_lastmodified > FROM_UNIXTIME(:sql_last_value) AND dc.dv_lastmodified < NOW()) order by dc.dv_lastmodified ASC"
  #       add_field => { "doctype" => "$TENANT_dv_document" }
  #     }
  #   }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
  namespace: dv-sys
  labels:
    app: logstash-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash-deployment
  template:
    metadata:
      labels:
        app: logstash-deployment
    spec:
      containers:
        - name: logstash
          image: dsqauretec/logstash-custom:0.0.1
          ports:
            - containerPort: 5044
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/usr/share/logstash/config/configs"
              name: elk-configs-storage
            # - name: config-volume
            #   mountPath: /usr/share/logstash/config
      volumes:
        - name: elk-configs-storage
          persistentVolumeClaim:
            claimName: elk-configs-pvc
      imagePullSecrets:
        - name: regcred
        # - name: config-volume
        #   configMap:
        #     name: logstash-configmap
        #     items:
        #       - key: logstash.yml
        #         path: logstash.yml
          # volumeMounts:
          # - name: config-volume
          # mountPath: /usr/share/logstash/config
          # - name: logstash-pipeline-volume
          # mountPath: /usr/share/logstash/pipeline
          # env:
          #   - name: INPUT_TEMPLATE_CONF
          #     valueFrom:
          #       configMapKeyRef:
          #         name: logstash-configmap
          #         key: inputTemplate.conf
      # volumes:
      # - name: config-volume
      #   configMap:
      #     name: logstash-configmap
      #     items:
      #       - key: logstash.yml
      #         path: logstash.yml
      # - name: logstash-pipeline-volume
      # configMap:
      # name: logstash-configmap
      # items:
      # - key: logstash.conf
      # path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash-service
  namespace: dv-sys
  labels:
    app: logstash-deployment
spec:
  selector:
    app: logstash-deployment
  ports:
    - protocol: TCP
      port: 5044
      targetPort: 5044
  type: ClusterIP
